table dCalendario
	lineageTag: a964c785-2e60-460d-9e05-c49b642b93f2
	dataCategory: Time

	column Data
		dataType: dateTime
		isKey
		formatString: Short Date
		lineageTag: 01cf8667-4baa-4437-89b6-1d6264e219ed
		summarizeBy: none
		sourceColumn: Data

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column DataIndice
		dataType: int64
		formatString: 0
		lineageTag: 300bc9cd-561a-4917-a3e5-df771cb38766
		summarizeBy: sum
		sourceColumn: DataIndice

		annotation SummarizationSetBy = Automatic

	column DiasParaHoje
		dataType: int64
		formatString: 0
		lineageTag: 7590b5c9-536d-4b50-8103-bf93f88d7f4b
		summarizeBy: sum
		sourceColumn: DiasParaHoje

		annotation SummarizationSetBy = Automatic

	column DataAtual
		dataType: string
		lineageTag: e9398cdb-3fee-4e1a-b7f6-0e6ed1ef844f
		summarizeBy: none
		sourceColumn: DataAtual

		annotation SummarizationSetBy = Automatic

	column Ano
		dataType: int64
		formatString: 0
		lineageTag: 5dd08291-22e9-4ce9-82dd-988eb83bf2c7
		summarizeBy: sum
		sourceColumn: Ano

		annotation SummarizationSetBy = Automatic

	column AnoInicio
		dataType: dateTime
		formatString: Long Date
		lineageTag: 9456e32b-ad24-4313-9e58-abaac9ebf45e
		summarizeBy: none
		sourceColumn: AnoInicio

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column AnoFim
		dataType: dateTime
		formatString: Long Date
		lineageTag: 3669acd3-b223-4acc-bf22-03d848db495a
		summarizeBy: none
		sourceColumn: AnoFim

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column AnoIndice
		dataType: int64
		formatString: 0
		lineageTag: f250db35-f8fd-4f8c-9742-9e4c632297c5
		summarizeBy: sum
		sourceColumn: AnoIndice

		annotation SummarizationSetBy = Automatic

	column AnoDecrescenteNome
		dataType: int64
		formatString: 0
		lineageTag: ce427b8c-66f1-43f3-9f7e-119c1a1e583b
		summarizeBy: sum
		sourceColumn: AnoDecrescenteNome

		annotation SummarizationSetBy = Automatic

	column AnoDecrescenteNumero
		dataType: int64
		formatString: 0
		lineageTag: 47b96050-f034-410a-8a6b-d4e9b62089f2
		summarizeBy: sum
		sourceColumn: AnoDecrescenteNumero

		annotation SummarizationSetBy = Automatic

	column AnosParaHoje
		dataType: int64
		formatString: 0
		lineageTag: 22cb32f3-98ac-4d45-bbd2-04732a99d003
		summarizeBy: sum
		sourceColumn: AnosParaHoje

		annotation SummarizationSetBy = Automatic

	column AnoAtual
		dataType: string
		lineageTag: 1ec6bdf2-66f6-483a-a08c-1b731488f9dd
		summarizeBy: none
		sourceColumn: AnoAtual

		annotation SummarizationSetBy = Automatic

	column DiaDoMes
		dataType: int64
		formatString: 0
		lineageTag: dae4daac-1e36-4e59-ad0c-e695f77153a4
		summarizeBy: sum
		sourceColumn: DiaDoMes

		annotation SummarizationSetBy = Automatic

	column DiaDoAno
		dataType: int64
		formatString: 0
		lineageTag: 20a8577b-34cd-4d34-a77e-e4dd1dc02ae0
		summarizeBy: sum
		sourceColumn: DiaDoAno

		annotation SummarizationSetBy = Automatic

	column DiaDaSemanaNumero
		dataType: int64
		formatString: 0
		lineageTag: a1009867-3f4e-44f9-bfe7-811d5cfdbfd8
		summarizeBy: sum
		sourceColumn: DiaDaSemanaNumero

		annotation SummarizationSetBy = Automatic

	column DiaDaSemanaNome
		dataType: string
		lineageTag: da1c0e9e-4276-4c46-abc2-3c6d726f6734
		summarizeBy: none
		sourceColumn: DiaDaSemanaNome

		annotation SummarizationSetBy = Automatic

	column DiaDaSemanaNomeAbreviado
		dataType: string
		lineageTag: 6c742bb5-328d-41ea-8a05-d993d7ea9030
		summarizeBy: none
		sourceColumn: DiaDaSemanaNomeAbreviado

		annotation SummarizationSetBy = Automatic

	column DiaDaSemanaNomeIniciais
		dataType: string
		lineageTag: 92da696c-2a3c-4470-954f-f375b441b57a
		summarizeBy: none
		sourceColumn: DiaDaSemanaNomeIniciais

		annotation SummarizationSetBy = Automatic

	column MesNumero
		dataType: int64
		formatString: 0
		lineageTag: babac2a6-98d2-4b1c-b5c9-1dc3b979c235
		summarizeBy: sum
		sourceColumn: MesNumero

		annotation SummarizationSetBy = Automatic

	column MesNome
		dataType: string
		lineageTag: 1a8d37c3-affc-4b88-82cc-b533bd4bec1c
		summarizeBy: none
		sourceColumn: MesNome
		sortByColumn: MesNumero

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	column MesNomeAbreviado
		dataType: string
		lineageTag: 27ba1475-6ac8-41f9-95da-ab8797fe94d6
		summarizeBy: none
		sourceColumn: MesNomeAbreviado
		sortByColumn: MesNumero

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	column MesNomeIniciais
		dataType: string
		lineageTag: 59acebce-188c-47ee-acc1-e6b923c7a3aa
		summarizeBy: none
		sourceColumn: MesNomeIniciais

		annotation SummarizationSetBy = Automatic

	column MesAnoNome
		dataType: string
		lineageTag: b25f56a1-ed76-4005-bd0b-9eca3eb3cdbd
		summarizeBy: none
		sourceColumn: MesAnoNome
		sortByColumn: MesNumero

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	column MesAnoNumero
		dataType: int64
		formatString: 0
		lineageTag: a33ceb89-43f1-45f4-aa1b-21858a04697d
		summarizeBy: sum
		sourceColumn: MesAnoNumero

		annotation SummarizationSetBy = Automatic

	column MesDiaNumero
		dataType: int64
		formatString: 0
		lineageTag: abb6fd01-2a70-41a9-95a1-3651f5bf055c
		summarizeBy: sum
		sourceColumn: MesDiaNumero

		annotation SummarizationSetBy = Automatic

	column MesDiaNome
		dataType: string
		lineageTag: 6247000e-d9cc-437a-acef-b1b9b4241de8
		summarizeBy: none
		sourceColumn: MesDiaNome

		annotation SummarizationSetBy = Automatic

	column MesInicio
		dataType: dateTime
		formatString: Short Date
		lineageTag: 32bc1187-74dd-4a1d-9945-ff48b036d1e4
		summarizeBy: none
		sourceColumn: MesInicio

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column MesFim
		dataType: dateTime
		formatString: Short Date
		lineageTag: f8412652-0d96-4206-b5af-66aba055f14d
		summarizeBy: none
		sourceColumn: MesFim

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column MesIndice
		dataType: int64
		formatString: 0
		lineageTag: 46a7a682-9efd-43a6-918d-4ce336200e32
		summarizeBy: sum
		sourceColumn: MesIndice

		annotation SummarizationSetBy = Automatic

	column MesesParaHoje
		dataType: int64
		formatString: 0
		lineageTag: 51c51958-9b9d-4ba3-8fcf-4a07370156e3
		summarizeBy: sum
		sourceColumn: MesesParaHoje

		annotation SummarizationSetBy = Automatic

	column MesAtualNome
		dataType: string
		lineageTag: 6c5b34da-113b-4c1e-8c0e-600d63b6bfb1
		summarizeBy: none
		sourceColumn: MesAtualNome

		annotation SummarizationSetBy = Automatic

	column MesAtualNomeAbreviado
		dataType: string
		lineageTag: 3cb743b0-f009-46ac-8d08-479e4a583072
		summarizeBy: none
		sourceColumn: MesAtualNomeAbreviado
		sortByColumn: MesNumero

		changedProperty = SortByColumn

		annotation SummarizationSetBy = Automatic

	column MesAnoAtualNome
		dataType: string
		lineageTag: 3e499119-de43-4fe3-a644-c3b50bfddee9
		summarizeBy: none
		sourceColumn: MesAnoAtualNome

		annotation SummarizationSetBy = Automatic

	column TrimestreNumero
		dataType: int64
		formatString: 0
		lineageTag: b04126e9-f032-4af5-abc5-618038269aff
		summarizeBy: sum
		sourceColumn: TrimestreNumero

		annotation SummarizationSetBy = Automatic

	column TrimestreNome
		dataType: string
		lineageTag: 65e8bba9-43bd-41da-9cee-6c7c7ff81cd2
		summarizeBy: none
		sourceColumn: TrimestreNome

		annotation SummarizationSetBy = Automatic

	column TrimestreAnoNome
		dataType: string
		lineageTag: 6d91f148-0297-4313-8a01-8ec1f0e924ae
		summarizeBy: none
		sourceColumn: TrimestreAnoNome

		annotation SummarizationSetBy = Automatic

	column TrimestreAnoNumero
		dataType: int64
		formatString: 0
		lineageTag: 56457d73-5ef4-4958-906e-e938fd84317e
		summarizeBy: sum
		sourceColumn: TrimestreAnoNumero

		annotation SummarizationSetBy = Automatic

	column TrimestreInicio
		dataType: dateTime
		formatString: Long Date
		lineageTag: 01ff3244-fd31-44a3-b064-71156af0fdc9
		summarizeBy: none
		sourceColumn: TrimestreInicio

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column TrimestreFim
		dataType: dateTime
		formatString: Long Date
		lineageTag: eecdb301-7f56-4976-85e3-4570a8151bd4
		summarizeBy: none
		sourceColumn: TrimestreFim

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column TrimestreIndice
		dataType: int64
		formatString: 0
		lineageTag: 2b744038-1c0a-438b-b7e8-2a98a93b3240
		summarizeBy: sum
		sourceColumn: TrimestreIndice

		annotation SummarizationSetBy = Automatic

	column TrimestresParaHoje
		dataType: int64
		formatString: 0
		lineageTag: 3f7b9fb1-48e6-4b75-84a9-a822642fcaf5
		summarizeBy: sum
		sourceColumn: TrimestresParaHoje

		annotation SummarizationSetBy = Automatic

	column TrimestreAtual
		dataType: string
		lineageTag: 6bb72324-abb4-45fd-813c-489e9c4e0c9d
		summarizeBy: none
		sourceColumn: TrimestreAtual

		annotation SummarizationSetBy = Automatic

	column TrimestreAnoAtual
		dataType: string
		lineageTag: 11e53d62-554e-4ba8-bb65-53db702b09a6
		summarizeBy: none
		sourceColumn: TrimestreAnoAtual

		annotation SummarizationSetBy = Automatic

	column MesDoTrimestreNumero
		dataType: int64
		formatString: 0
		lineageTag: 57f04356-7b6b-4474-83a7-12310e3b44d4
		summarizeBy: sum
		sourceColumn: MesDoTrimestreNumero

		annotation SummarizationSetBy = Automatic

	column SemanaDoAnoNumeroISO
		dataType: int64
		formatString: 0
		lineageTag: b045f59d-8476-4ac8-98da-061f11577b53
		summarizeBy: sum
		sourceColumn: SemanaDoAnoNumeroISO

		annotation SummarizationSetBy = Automatic

	column AnoISO
		dataType: int64
		formatString: 0
		lineageTag: a7233da9-37d9-402c-bfed-98a290c9a404
		summarizeBy: sum
		sourceColumn: AnoISO

		annotation SummarizationSetBy = Automatic

	column SemanaAnoNumeroISO
		dataType: int64
		formatString: 0
		lineageTag: 621d7cb2-bbaf-4abc-9414-4034b94d8a94
		summarizeBy: sum
		sourceColumn: SemanaAnoNumeroISO

		annotation SummarizationSetBy = Automatic

	column SemanaAnoNomeISO
		dataType: string
		lineageTag: 25064328-9126-477b-8731-6effbf653e86
		summarizeBy: none
		sourceColumn: SemanaAnoNomeISO

		annotation SummarizationSetBy = Automatic

	column SemanaInicioISO
		dataType: dateTime
		formatString: Long Date
		lineageTag: e195d6eb-2033-4fb1-9457-5e80181e4436
		summarizeBy: none
		sourceColumn: SemanaInicioISO

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column SemanaFimISO
		dataType: dateTime
		formatString: Long Date
		lineageTag: 90fa1e2a-fb1f-4bf2-be91-7ea3c3088af8
		summarizeBy: none
		sourceColumn: SemanaFimISO

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column SemanaIndiceISO
		dataType: int64
		formatString: 0
		lineageTag: e4e72c3c-3337-4845-845a-c653560a6055
		summarizeBy: sum
		sourceColumn: SemanaIndiceISO

		annotation SummarizationSetBy = Automatic

	column SemanasParaHojeISO
		dataType: int64
		formatString: 0
		lineageTag: 127da1ec-4108-48f7-96a9-b895758eb3fe
		summarizeBy: sum
		sourceColumn: SemanasParaHojeISO

		annotation SummarizationSetBy = Automatic

	column SemanaAtualISO
		dataType: string
		lineageTag: a7584ee1-76a1-47d0-b9b3-6dab16e0cf40
		summarizeBy: none
		sourceColumn: SemanaAtualISO

		annotation SummarizationSetBy = Automatic

	column SemanaPeriodoNome
		dataType: string
		lineageTag: 4e7aeec3-f4df-4540-aca4-21c1a1a23c4e
		summarizeBy: none
		sourceColumn: SemanaPeriodoNome

		annotation SummarizationSetBy = Automatic

	column SemanaDoMesNumero
		dataType: int64
		formatString: 0
		lineageTag: 06d542d5-62f8-4abc-aa7b-273f525d2364
		summarizeBy: sum
		sourceColumn: SemanaDoMesNumero

		annotation SummarizationSetBy = Automatic

	column SemestreNumero
		dataType: int64
		formatString: 0
		lineageTag: 174d5a50-6e31-42e3-869c-583c75edf01c
		summarizeBy: sum
		sourceColumn: SemestreNumero

		annotation SummarizationSetBy = Automatic

	column SemestreAnoNome
		dataType: string
		lineageTag: a635dccf-9a1c-4d98-bdb2-da54011e01fe
		summarizeBy: none
		sourceColumn: SemestreAnoNome

		annotation SummarizationSetBy = Automatic

	column SemestreAnoNumero
		dataType: int64
		formatString: 0
		lineageTag: c89ece6b-6a82-4481-baae-8c8539332cb4
		summarizeBy: sum
		sourceColumn: SemestreAnoNumero

		annotation SummarizationSetBy = Automatic

	column SemestreIndice
		dataType: int64
		formatString: 0
		lineageTag: 2c25193e-15d5-471f-a95c-23cf09a4f976
		summarizeBy: sum
		sourceColumn: SemestreIndice

		annotation SummarizationSetBy = Automatic

	column SemestresParaHoje
		dataType: int64
		formatString: 0
		lineageTag: c7920fa3-9a15-4805-ab28-b328defc6c8e
		summarizeBy: sum
		sourceColumn: SemestresParaHoje

		annotation SummarizationSetBy = Automatic

	column SemestreAtual
		dataType: string
		lineageTag: 802e2c0b-b28e-4ab5-822a-2e2c1ab1229f
		summarizeBy: none
		sourceColumn: SemestreAtual

		annotation SummarizationSetBy = Automatic

	column BimestreNumero
		dataType: int64
		formatString: 0
		lineageTag: 926ced0e-96ff-4619-ae23-71ba41231da8
		summarizeBy: sum
		sourceColumn: BimestreNumero

		annotation SummarizationSetBy = Automatic

	column BimestreAnoNome
		dataType: string
		lineageTag: 8b83ef18-2f53-40f1-9fde-762e1445585f
		summarizeBy: none
		sourceColumn: BimestreAnoNome

		annotation SummarizationSetBy = Automatic

	column BimestreAnoNumero
		dataType: int64
		formatString: 0
		lineageTag: 154eb6cd-97fd-4fa5-bbdc-1ed1238ec773
		summarizeBy: sum
		sourceColumn: BimestreAnoNumero

		annotation SummarizationSetBy = Automatic

	column BimestreIndice
		dataType: int64
		formatString: 0
		lineageTag: daf2e20b-8a24-435b-8a43-ea612dc494f1
		summarizeBy: sum
		sourceColumn: BimestreIndice

		annotation SummarizationSetBy = Automatic

	column BimestresParaHoje
		dataType: int64
		formatString: 0
		lineageTag: 796d4b82-682f-4672-b1aa-e66e7d85e0f4
		summarizeBy: sum
		sourceColumn: BimestresParaHoje

		annotation SummarizationSetBy = Automatic

	column BimestreAtual
		dataType: string
		lineageTag: 58955c2e-4acd-40ac-bf54-93de246ab5cc
		summarizeBy: none
		sourceColumn: BimestreAtual

		annotation SummarizationSetBy = Automatic

	column QuinzenaDoMesNumero
		dataType: int64
		formatString: 0
		lineageTag: 5f78e99f-7852-4932-b3c9-53b99aeb554d
		summarizeBy: sum
		sourceColumn: QuinzenaDoMesNumero

		annotation SummarizationSetBy = Automatic

	column QuinzenaMesNumero
		dataType: int64
		formatString: 0
		lineageTag: e663aacc-46ca-41f9-8f52-895894fd790a
		summarizeBy: sum
		sourceColumn: QuinzenaMesNumero

		annotation SummarizationSetBy = Automatic

	column QuinzenaMesNome
		dataType: string
		lineageTag: 1cfaf7d5-726c-4390-bac5-667c2718c0cd
		summarizeBy: none
		sourceColumn: QuinzenaMesNome

		annotation SummarizationSetBy = Automatic

	column QuinzenaMesAnoNumero
		dataType: int64
		formatString: 0
		lineageTag: 016bf0ad-e446-4cd9-b418-5a79ef2523d8
		summarizeBy: sum
		sourceColumn: QuinzenaMesAnoNumero

		annotation SummarizationSetBy = Automatic

	column QuinzenaMesAnoNome
		dataType: string
		lineageTag: 19122685-5c9b-45eb-86ee-4a9c4d9eb850
		summarizeBy: none
		sourceColumn: QuinzenaMesAnoNome

		annotation SummarizationSetBy = Automatic

	column QuinzenaIndice
		dataType: int64
		formatString: 0
		lineageTag: 464e73e1-ab59-4486-8680-fbfc101b3541
		summarizeBy: sum
		sourceColumn: QuinzenaIndice

		annotation SummarizationSetBy = Automatic

	column QuinzenasParaHoje
		dataType: int64
		formatString: 0
		lineageTag: 420f120e-1e05-4b75-b85c-1679775a1579
		summarizeBy: sum
		sourceColumn: QuinzenasParaHoje

		annotation SummarizationSetBy = Automatic

	column QuinzenaAtual
		dataType: string
		lineageTag: 4ef950e9-7634-4fbf-ba53-35a6bbefb3d8
		summarizeBy: none
		sourceColumn: QuinzenaAtual

		annotation SummarizationSetBy = Automatic

	column DataDeFechamentoRef
		dataType: dateTime
		formatString: Long Date
		lineageTag: 9bbcc0a3-19dc-4455-9e2e-77b44aa31033
		summarizeBy: none
		sourceColumn: DataDeFechamentoRef

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column AnoFechamento
		dataType: int64
		formatString: 0
		lineageTag: d4c5ecc6-df80-4554-a71f-e7aa60b1b151
		summarizeBy: sum
		sourceColumn: AnoFechamento

		annotation SummarizationSetBy = Automatic

	column MesFechamentoNome
		dataType: string
		lineageTag: 3abab401-88d2-4a29-9842-e182e73aeb65
		summarizeBy: none
		sourceColumn: MesFechamentoNome

		annotation SummarizationSetBy = Automatic

	column MesFechamentoNomeAbreviado
		dataType: string
		lineageTag: b762cc58-0984-4258-948e-a6c2580fb4f1
		summarizeBy: none
		sourceColumn: MesFechamentoNomeAbreviado

		annotation SummarizationSetBy = Automatic

	column MesFechamentoNumero
		dataType: int64
		formatString: 0
		lineageTag: 3512ad98-06a0-4f67-8f2b-27ef735cd46a
		summarizeBy: sum
		sourceColumn: MesFechamentoNumero

		annotation SummarizationSetBy = Automatic

	column MesAnoFechamentoNome
		dataType: string
		lineageTag: 8bc0f641-1753-43d0-9749-a6fd10029c56
		summarizeBy: none
		sourceColumn: MesAnoFechamentoNome

		annotation SummarizationSetBy = Automatic

	column MesAnoFechamentoNumero
		dataType: int64
		formatString: 0
		lineageTag: 01631dcc-1ba7-47d0-94d9-2e70c2fc2150
		summarizeBy: sum
		sourceColumn: MesAnoFechamentoNumero

		annotation SummarizationSetBy = Automatic

	column EstacaoNorteNumero
		dataType: int64
		formatString: 0
		lineageTag: 1fc36998-a652-417a-a883-919b3f03bd10
		summarizeBy: sum
		sourceColumn: EstacaoNorteNumero

		annotation SummarizationSetBy = Automatic

	column EstacaoNorteNome
		dataType: string
		lineageTag: 993a31a0-2aa3-4f79-84e2-8185d2179eae
		summarizeBy: none
		sourceColumn: EstacaoNorteNome

		annotation SummarizationSetBy = Automatic

	column EstacaoSulNumero
		dataType: int64
		formatString: 0
		lineageTag: 231888a6-f45c-408d-a289-94cee3000043
		summarizeBy: sum
		sourceColumn: EstacaoSulNumero

		annotation SummarizationSetBy = Automatic

	column EstacaoSulNome
		dataType: string
		lineageTag: acb65c32-945f-4d66-bd77-ccd75064a5bd
		summarizeBy: none
		sourceColumn: EstacaoSulNome

		annotation SummarizationSetBy = Automatic

	column Feriado
		dataType: string
		lineageTag: ca1c8550-95e6-4378-9d5c-921ff865dc66
		summarizeBy: none
		sourceColumn: Feriado

		annotation SummarizationSetBy = Automatic

	column DiaUtilNumero
		dataType: int64
		formatString: 0
		lineageTag: 82302dc8-0971-4e89-a992-bf14af4f0bfd
		summarizeBy: sum
		sourceColumn: DiaUtilNumero

		annotation SummarizationSetBy = Automatic

	column DiaUtilNome
		dataType: string
		lineageTag: 0542d864-f355-43e2-b4f8-6d06a75f8db0
		summarizeBy: none
		sourceColumn: DiaUtilNome

		annotation SummarizationSetBy = Automatic

	column AnoFiscalInicialNumero
		dataType: int64
		formatString: 0
		lineageTag: 0627e441-bb7f-4086-8fe7-02340b559542
		summarizeBy: sum
		sourceColumn: AnoFiscalInicialNumero

		annotation SummarizationSetBy = Automatic

	column AnoFiscalFinalNumero
		dataType: int64
		formatString: 0
		lineageTag: 241d04f3-58a3-4dd9-ab95-09fe9529fac9
		summarizeBy: sum
		sourceColumn: AnoFiscalFinalNumero

		annotation SummarizationSetBy = Automatic

	column AnoFiscal
		dataType: string
		lineageTag: 321d6d09-cd1b-4b9d-8907-a0efafca9fe4
		summarizeBy: none
		sourceColumn: AnoFiscal

		annotation SummarizationSetBy = Automatic

	column AnoFiscalInicio
		dataType: dateTime
		formatString: Long Date
		lineageTag: ccbe0cd8-82c1-4432-8dad-893ef8f186f8
		summarizeBy: none
		sourceColumn: AnoFiscalInicio

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column AnoFiscalFim
		dataType: dateTime
		formatString: Long Date
		lineageTag: f1a38289-50fd-485b-bc9b-50deced8e429
		summarizeBy: none
		sourceColumn: AnoFiscalFim

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column AnoFiscalAtual
		dataType: string
		lineageTag: 8d6ce05a-e8f1-42d3-8f11-00dab0f066fa
		summarizeBy: none
		sourceColumn: AnoFiscalAtual

		annotation SummarizationSetBy = Automatic

	column AnosFiscaisParaHoje
		dataType: int64
		formatString: 0
		lineageTag: b31de2a1-cc36-4f33-9c12-c797423ff087
		summarizeBy: sum
		sourceColumn: AnosFiscaisParaHoje

		annotation SummarizationSetBy = Automatic

	column MesFiscalNumero
		dataType: int64
		formatString: 0
		lineageTag: 2a106e29-ab64-4987-ac89-43639cede9e2
		summarizeBy: sum
		sourceColumn: MesFiscalNumero

		annotation SummarizationSetBy = Automatic

	column MesFiscalNome
		dataType: string
		lineageTag: ddd5ecc3-cc76-4c7d-b6bd-c54be435cf1c
		summarizeBy: none
		sourceColumn: MesFiscalNome

		annotation SummarizationSetBy = Automatic

	column MesFiscalNomeAbreviado
		dataType: string
		lineageTag: 5d43cece-4381-4989-ae26-147be480e037
		summarizeBy: none
		sourceColumn: MesFiscalNomeAbreviado

		annotation SummarizationSetBy = Automatic

	column MesFiscalAtual
		dataType: string
		lineageTag: 786174f8-f467-4d36-80c8-dda093f7dd4f
		summarizeBy: none
		sourceColumn: MesFiscalAtual

		annotation SummarizationSetBy = Automatic

	column MesAnoFiscalNome
		dataType: string
		lineageTag: dda5db5f-52e9-4c94-b12e-4794b9bdcf0c
		summarizeBy: none
		sourceColumn: MesAnoFiscalNome

		annotation SummarizationSetBy = Automatic

	column MesAnoFiscalNumero
		dataType: int64
		formatString: 0
		lineageTag: bf30dbe4-aad9-4be2-b8aa-a45dba4d6146
		summarizeBy: sum
		sourceColumn: MesAnoFiscalNumero

		annotation SummarizationSetBy = Automatic

	column MesAnoFiscalAtual
		dataType: string
		lineageTag: fa2c31a0-ed80-41a5-a6ee-33d9464d7607
		summarizeBy: none
		sourceColumn: MesAnoFiscalAtual

		annotation SummarizationSetBy = Automatic

	column MesesFiscaisParaHoje
		dataType: int64
		formatString: 0
		lineageTag: c8925f6e-f3c5-4b27-b91b-505ad3ce0cea
		summarizeBy: sum
		sourceColumn: MesesFiscaisParaHoje

		annotation SummarizationSetBy = Automatic

	column TrimestreFiscalNumero
		dataType: int64
		formatString: 0
		lineageTag: 4740f3a6-4871-483e-a6d2-1abd0455b428
		summarizeBy: sum
		sourceColumn: TrimestreFiscalNumero

		annotation SummarizationSetBy = Automatic

	column TrimestreFiscalNome
		dataType: string
		lineageTag: b92e9cc9-d6ff-45dc-b240-aa8990fe19cb
		summarizeBy: none
		sourceColumn: TrimestreFiscalNome

		annotation SummarizationSetBy = Automatic

	column MesDoTrimestreFiscalNumero
		dataType: int64
		formatString: 0
		lineageTag: 165a5a4d-c2c1-4792-a11e-3dc6085c5fc2
		summarizeBy: sum
		sourceColumn: MesDoTrimestreFiscalNumero

		annotation SummarizationSetBy = Automatic

	column AnoTrimestreFiscalNome
		dataType: string
		lineageTag: 500b3dd8-2f6c-4d34-b30c-94f7155629e5
		summarizeBy: none
		sourceColumn: AnoTrimestreFiscalNome

		annotation SummarizationSetBy = Automatic

	column AnoTrimestreFiscalNumero
		dataType: int64
		formatString: 0
		lineageTag: 21383e5e-e36f-4e54-a6d9-872b0e18a506
		summarizeBy: sum
		sourceColumn: AnoTrimestreFiscalNumero

		annotation SummarizationSetBy = Automatic

	column TrimestreFiscalInicio
		dataType: dateTime
		formatString: Long Date
		lineageTag: bf5e4f94-c72a-41bc-bffc-f0358f1f3ad6
		summarizeBy: none
		sourceColumn: TrimestreFiscalInicio

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column TrimestreFiscalFim
		dataType: dateTime
		formatString: Long Date
		lineageTag: 5a38622c-0e0c-4794-96dd-4b90c818739e
		summarizeBy: none
		sourceColumn: TrimestreFiscalFim

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column TrimestresFiscaisParaHoje
		dataType: int64
		formatString: 0
		lineageTag: a061ae6d-882f-4309-b029-e62111c23eaa
		summarizeBy: sum
		sourceColumn: TrimestresFiscaisParaHoje

		annotation SummarizationSetBy = Automatic

	column TrimestreFiscalAtual
		dataType: string
		lineageTag: 43ad1cf2-b390-43b5-b30e-8b8566e99046
		summarizeBy: none
		sourceColumn: TrimestreFiscalAtual

		annotation SummarizationSetBy = Automatic

	column DiaDoTrimestreFiscal
		dataType: int64
		formatString: 0
		lineageTag: d9040e35-949f-47db-969f-057e86ed4720
		summarizeBy: sum
		sourceColumn: DiaDoTrimestreFiscal

		annotation SummarizationSetBy = Automatic

	partition dCalendario = m
		mode: import
		source = ```
				let
									
				    #"-----PARAMETERS-----" = "",
				
				    // Specify the start date 
				    startDate = #date(2017, 1, 1),
				
				    // Years ahead today
				    yearsAhead = 1,
				            
				    // Specify the start of the week. Default: Day.Monday 
				    startOfWeek = Day.Monday,
				    
				    // Specify the month of the fiscal year end. Default: 3 (March)
				    monthOfFiscalYearEnd = 3,
				    
				    /* Start day of the closing month. 
				        Default: 16 (it means the closing month goes from the 16th of the current month 
				        to the 15th of the next month) */
				    closingMonthStartDay = 16,
				    
				    // Available: "en-US", "pt-BR", "es-ES"
				    language = "pt-BR",
				
				    #"-----INTERNAL USE-----" = "",
				    
				    endDate = Date.AddYears(Date.EndOfYear(Date.From(DateTime.LocalNow())), yearsAhead),
				    currentDate = Date.From(DateTime.LocalNow()),
				    currentYear = Date.Year(currentDate),
				    currentMonth = Date.Month(currentDate),  
				    startYear = Date.Year(startDate),
				    startMonth = Date.Month(startDate),
				    currentFiscalYear = Date.Year(Date.AddMonths(currentDate, 12-monthOfFiscalYearEnd)), 
				    
				
				    // The table with auxiliary texts cross the languages
				    auxiliaryTextTable = Table.UnpivotOtherColumns(
				        #table(
				            type table [Class=text, #"en-US"=text, #"pt-BR"=text, #"es-ES"=text],
				            {
				                    { "current"        , "Current"        , "Atual"       , "Actual"              }
				                , { "quarter"        , "Q"              , "T"           , "T"                   }
				                , { "week"           , "W"              , "S"           , "S"                   }
				                , { "half"           , "H"              , "S"           , "S"                   }
				                , { "bimester"       , "B"              , "B"           , "B"                   }
				                , { "fortnight"      , "FN"             , "Q"           , "Q"                   }
				                , { "summer"         , "Summer"         , "Verão"       , "Verano"              }
				                , { "spring"         , "Spring"         , "Primavera"   , "Primavera"           }
				                , { "autumn"         , "Autumn"         , "Outono"      , "Otoño"               }
				                , { "winter"         , "Winter"         , "Inverno"     , "Invierno"            }
				                , { "businessDay"    , "BusinessDay"    , "Dia Útil"    , "Dia Laborable"       }
				                , { "non-businessDay", "Non-BusinessDay", "Dia Não Útil", "Dia No Laborable"    }
				            }
				        ),
				        {"Class"}, "Language", "Value"
				    ),
				    
				    // Filtered table on selected language
				    auxiliaryTextTableOnLanguage = Table.Buffer(Table.SelectRows(auxiliaryTextTable, each [Language]=language)),
				    currentText = auxiliaryTextTableOnLanguage{[Class="current"]}[Value], 
				    quarterPrefix = auxiliaryTextTableOnLanguage{[Class="quarter"]}[Value], 
				    weekPrefix = auxiliaryTextTableOnLanguage{[Class="week"]}[Value],
				    halfPrefix = auxiliaryTextTableOnLanguage{[Class="half"]}[Value],
				    bimesterPrefix = auxiliaryTextTableOnLanguage{[Class="bimester"]}[Value],
				    fortnightPrefix = auxiliaryTextTableOnLanguage{[Class="fortnight"]}[Value],
				    summerText = auxiliaryTextTableOnLanguage{[Class="summer"]}[Value],
				    springText = auxiliaryTextTableOnLanguage{[Class="spring"]}[Value],
				    autumnText = auxiliaryTextTableOnLanguage{[Class="autumn"]}[Value],
				    winterText = auxiliaryTextTableOnLanguage{[Class="winter"]}[Value],
				    businessDayText = auxiliaryTextTableOnLanguage{[Class="businessDay"]}[Value],
				    nonBusinessDayText = auxiliaryTextTableOnLanguage{[Class="non-businessDay"]}[Value],
				    
				    // Invisible character (zero-width spacing)
				    zws = Character.FromNumber(8203),  
				
				    // List with all dates 
				    datesList = List.Dates(startDate, Duration.Days(endDate-startDate)+1, #duration(1, 0, 0, 0)),
				
				    // List with all years 
				    yearRange = List.Buffer({Date.Year(startDate)..Date.Year(endDate)}),
				            
				
				    #"-----GENERATE HOLIDAYS-----" = "", 
				
				    // Fixed holidays that occur every year 
				    fixedHolidaysList = #table(
				        type table [Day=Int64.Type, Month=Int64.Type, Holiday=text],
				        
				        if language="pt-BR" then
				            {
				                // Day, Month, Holiday
				                    { 01, 01, "Confraternização Universal"   }
				                , { 25, 01, "Aniversário da Cidade"        } 
				                , { 21, 04, "Tiradentes"                   } 
				                , { 01, 05, "Dia do Trabalhador"           } 
				                , { 09, 07, "Revolução Constitucionalista" } 
				                , { 07, 09, "Independência do Brasil"      } 
				                , { 12, 10, "N. Srª Aparecida"             } 
				                , { 02, 11, "Finados"                      } 
				                , { 15, 11, "Proclamação da República"     } 
				                , { 20, 11, "Consciência Negra"            } 
				                , { 24, 12, "Véspera de Natal"             } 
				                , { 25, 12, "Natal"                        } 
				                , { 31, 12, "Véspera de Ano Novo"          } 
				            }
				
				        else if language="en-US" then
				            {
				                // Day, Month, Holiday
				                    { 1,  1, "New Year's Day"}
				                , { 4,  7, "Independence Day"}
				                , {11, 11, "Veterans Day"}
				                , {25, 12, "Christmas Day"}
				            }
				
				        else if language="es-ES" then
				            {
				                // Day, Month, Holiday
				                    { 1, 1, "Año Nuevo"}
				                , { 1, 5, "Día del Trabajo" } 
				            }
				        else null
				    ),
				
				    // Function that generates the fixed holidays for all years 
				    fxGenerateFixedHolidays = (year)=>
				        Table.AddColumn(
				            fixedHolidaysList,
				            "Date",
				            each #date(year, [Month], [Day]),
				            type date
				        )[[Date], [Holiday]],
				            
				    // Generate the fixed holiday table 
				    fixedHolidays = Table.Combine(List.Transform(yearRange, fxGenerateFixedHolidays)),
				    
				    // Function that generates the moving holidays 
				    fxGenerateMovingHolidays = (year) =>
				    let
				        modExcel = (x, y) =>
				            let
				                m = Number.Mod(x, y)
				            in
				                if m < 0 then m + y else m,
				        easter = Date.From(
				            Number.Round(
				                Number.From(#date(year, 4, 1))
				                    / 7
				                    + modExcel(19 * modExcel(year, 19) - 7, 30) * 0.14,
				                0,
				                RoundingMode.Up
				            )
				                * 7
				                - 6
				        ),
				        movingHolidays = #table(
				            type table [Date = date, Holiday = text],
				            {
				                    { Date.AddDays(easter, -2  ), if language = "pt-BR" then "Sexta-Feira Santa" else if language = "en-US" then "Good Friday" else if language = "es-ES" then "Viernes Santo" else null } 
				                , { easter                    , if language = "pt-BR" then "Páscoa" else if language = "en-US" then "Easter" else if language = "es-ES" then "Pascua" else null }
				                , { Date.AddDays(easter, 60  ), "Corpus Christi"             }
				            //  , { Date.AddDays(easter, -48 ), "Segunda-feira de Carnaval"  }
				            //  , { Date.AddDays(easter, -47 ), "Terça-feira de Carnaval"    }
				            //  , { Date.AddDays(easter, -46 ), "Quarta-feira de Cinzas"     }
				            }
				        )
				    in
				        movingHolidays,
				            
				    // Generate the moving holiday table 
				    movingHolidays = Table.Combine(List.Transform(yearRange, fxGenerateMovingHolidays)),
				            
				    // Table containing all holidays 
				    holidays = Table.Group(Table.Combine({fixedHolidays, movingHolidays}), {"Date"}, {{"Holiday", each Text.Combine(_[Holiday], "/"), type text}}),
				    
				    #"-----GENERATE DATA-----" = "",
				
				    #"-----DATE-----" = "",
				    datesTable = Table.FromList(datesList, Splitter.SplitByNothing(), type table [ Date = date ]),
				    add_DateIndex = Table.AddIndexColumn(datesTable, "DateIndex", 1, 1, Int64.Type),
				    add_DaysToToday = Table.AddColumn(add_DateIndex, "DaysToToday", each Number.From([Date] - currentDate), Int64.Type),
				    add_CurrentDate = Table.AddColumn(add_DaysToToday, "CurrentDate", each if [DaysToToday] = 0 then currentText else Date.ToText([Date], "dd/MM/yyyy"), type text),
				
				    #"-----YEAR-----" = "",    
				    add_Year = Table.AddColumn(add_CurrentDate, "Year", each Date.Year([Date]), Int64.Type),
				    add_YearStart = Table.AddColumn(add_Year, "YearStart", each Date.StartOfYear([Date]), type date),
				    add_YearEnd = Table.AddColumn(add_YearStart, "YearEnd", each Date.EndOfYear([Date]), type date),
				    add_YearIndex = Table.AddColumn(add_YearEnd, "YearIndex", each [Year] - startYear + 1, Int64.Type),
				    add_YearDescendingName = Table.AddColumn(add_YearIndex, "YearDescendingName", each [Year], Int64.Type),
				    add_YearDescendingNumber = Table.AddColumn(add_YearDescendingName, "YearDescendingNumber", each [Year] * -1, Int64.Type),
				    add_YearsToToday = Table.AddColumn(add_YearDescendingNumber, "YearsToToday", each [Year] - Date.Year(currentDate), Int64.Type),
				    add_CurrentYear = Table.AddColumn(add_YearsToToday, "CurrentYear", each if [YearsToToday] = 0 then currentText else Text.From([Year]), type text),
				
				    #"-----DAY-----" = "",
				    add_DayOfMonth = Table.AddColumn(add_CurrentYear, "DayOfMonth", each Date.Day([Date]), Int64.Type),
				    add_DayOfYear = Table.AddColumn(add_DayOfMonth, "DayOfYear", each Date.DayOfYear([Date]), Int64.Type),
				    add_DayOfWeekNumber = Table.AddColumn(add_DayOfYear, "DayOfWeekNumber", each Date.DayOfWeek([Date], startOfWeek), Int64.Type),
				    add_DayOfWeekName = Table.AddColumn(add_DayOfWeekNumber, "DayOfWeekName", each Text.Proper(Date.DayOfWeekName([Date], language)), type text),
				    add_DayOfWeekNameShort = Table.AddColumn(add_DayOfWeekName, "DayOfWeekNameShort", each Text.Start([DayOfWeekName], 3), type text),
				    add_DayOfWeekNameInitials = Table.AddColumn(add_DayOfWeekNameShort, "DayOfWeekNameInitials", each Text.Repeat(zws, 7-[DayOfWeekNumber]) & Text.Start([DayOfWeekName], 1), type text),
				
				    #"-----MONTH-----" = "",
				    add_MonthNumber = Table.AddColumn(add_DayOfWeekNameInitials, "MonthNumber", each Date.Month([Date]), Int64.Type),
				    add_MonthName = Table.AddColumn(add_MonthNumber, "MonthName", each Text.Proper(Date.MonthName([Date], language)), type text), 
				    add_MonthNameShort = Table.AddColumn(add_MonthName, "MonthNameShort", each Text.Start([MonthName], 3), type text), 
				    add_MonthNameInitials = Table.AddColumn(add_MonthNameShort, "MonthNameInitials", each Text.Repeat(zws, 12-[MonthNumber]) & Text.Start([MonthName], 1), type text),
				    add_MonthYearName = Table.AddColumn(add_MonthNameInitials, "MonthYearName", each Text.Proper(Date.ToText([Date], [Format="MMM/yy", Culture=language])), type text),
				    add_MonthYearNumber = Table.AddColumn(add_MonthYearName, "MonthYearNumber", each [Year] * 100 + [MonthNumber], Int64.Type),
				    add_MonthDayNumber = Table.AddColumn(add_MonthYearNumber, "MonthDayNumber", each [MonthNumber] * 100 + [DayOfMonth], Int64.Type),
				    add_MonthDayName = Table.AddColumn(add_MonthDayNumber, "MonthDayName", each [MonthNameShort] & " " & Text.From([DayOfMonth]), type text), 
				    add_MonthStart = Table.AddColumn(add_MonthDayName, "MonthStart", each Date.StartOfMonth([Date]), type date),
				    add_MonthEnd = Table.AddColumn(add_MonthStart, "MonthEnd", each Date.EndOfMonth([Date]), type date),
				    add_MonthIndex = Table.AddColumn(add_MonthEnd, "MonthIndex", each 12 * ([Year]-Date.Year(startDate)) + [MonthNumber], Int64.Type),
				    add_MonthsToToday = Table.AddColumn(add_MonthIndex, "MonthsToToday", each ([Year] * 12 - 1 + [MonthNumber]) - (currentYear * 12 - 1 + Date.Month(currentDate)), Int64.Type),
				    add_CurrentMonthName = Table.AddColumn(add_MonthsToToday, "CurrentMonthName", each if currentMonth = [MonthNumber] then currentText else [MonthName], type text),
				    add_CurrentMonthNameShort = Table.AddColumn(add_CurrentMonthName, "CurrentMonthNameShort", each if currentMonth = [MonthNumber] then currentText else [MonthNameShort], type text),
				    add_CurrentMonthYearName = Table.AddColumn(add_CurrentMonthNameShort, "CurrentMonthYearName", each if [MonthsToToday] = 0 then currentText else [MonthYearName], type text),
				
				    #"-----QUARTER-----" = "",
				    add_QuarterNumber = Table.AddColumn(add_CurrentMonthYearName, "QuarterNumber", each Date.QuarterOfYear([Date]), Int64.Type), 
				    add_QuarterName = Table.AddColumn(add_QuarterNumber, "QuarterName", each quarterPrefix & Text.From([QuarterNumber]), type text),
				    add_QuarterYearName = Table.AddColumn(add_QuarterName, "QuarterYearName", each [QuarterName] & " " & Text.End(Text.From([Year]), 2), type text),
				    add_QuarterYearNumber = Table.AddColumn(add_QuarterYearName, "QuarterYearNumber", each [Year] * 100 + [QuarterNumber], Int64.Type), 
				    add_QuarterStart = Table.AddColumn(add_QuarterYearNumber, "QuarterStart", each Date.StartOfQuarter([Date]), type date),
				    add_QuarterEnd = Table.AddColumn(add_QuarterStart, "QuarterEnd", each Date.EndOfQuarter([Date]), type date),
				    add_QuarterIndex = Table.AddColumn(add_QuarterEnd, "QuarterIndex", each 4 * ([Year] - Date.Year(startDate)) + [QuarterNumber], Int64.Type),
				    add_QuartersToToday = Table.AddColumn(add_QuarterIndex, "QuartersToToday", each ([Year] * 4 - 1 + [QuarterNumber]) - (currentYear * 4 - 1 + Date.QuarterOfYear(currentDate)), Int64.Type),
				    add_CurrentQuarter = Table.AddColumn(add_QuartersToToday, "CurrentQuarter", each if Date.QuarterOfYear(currentDate) = [QuarterNumber] then currentText else [QuarterName], type text),
				    add_CurrentQuarterYear = Table.AddColumn(add_CurrentQuarter, "CurrentQuarterYear", each if [QuartersToToday] = 0 then currentText else [QuarterYearName], type text),
				    add_MonthOfQuarterNumber = Table.AddColumn(add_CurrentQuarterYear, "MonthOfQuarterNumber", each Number.Mod([MonthNumber] - 1, 3) + 1, Int64.Type),
				
				    #"-----WEEK-----" = "",
				    add_WeekOfYearNumberISO = Table.AddColumn(
				        add_MonthOfQuarterNumber, 
				        "WeekOfYearNumberISO", 
				        each let
				            thursdayInWeek = Date.AddDays(
				                [Date],
				                3 - Date.DayOfWeek([Date], Day.Monday)
				            ),
				            startYearThursdayInWeek = #date(Date.Year(thursdayInWeek), 1, 1),
				            diffDays = Duration.Days(thursdayInWeek - startYearThursdayInWeek)
				        in
				            Number.IntegerDivide(diffDays, 7, 0) + 1,
				        Int64.Type
				    ),
				
				    add_YearISO = Table.AddColumn(add_WeekOfYearNumberISO, "YearISO", each Date.Year(Date.AddDays([Date], 26 - [WeekOfYearNumberISO])), Int64.Type),
				    add_WeekYearNumberISO = Table.AddColumn(add_YearISO, "WeekYearNumberISO", each [YearISO] * 100 + [WeekOfYearNumberISO], Int64.Type),
				    add_WeekYearNameISO = Table.AddColumn(add_WeekYearNumberISO, "WeekYearNameISO", each weekPrefix & Text.PadStart(Text.From([WeekOfYearNumberISO]), 2, "0") & " " & Text.From([YearISO]), type text),
				    add_WeekStartISO = Table.AddColumn(add_WeekYearNameISO, "WeekStartISO", each Date.StartOfWeek([Date], Day.Monday), type date), 
				    add_WeekEndISO = Table.AddColumn(add_WeekStartISO, "WeekEndISO", each Date.EndOfWeek([Date], Day.Monday), type date), 
				    add_WeekIndexISO = Table.AddColumn(add_WeekEndISO, "WeekIndexISO", each Number.From([WeekStartISO] - Date.StartOfWeek(startDate, Day.Monday)) / 7 + 1, Int64.Type),
				    add_WeeksToTodayISO = Table.AddColumn(add_WeekIndexISO, "WeeksToTodayISO", each Number.From([WeekStartISO] - Date.StartOfWeek(currentDate, Day.Monday)) / 7, Int64.Type),
				    add_CurrentWeekISO = Table.AddColumn(add_WeeksToTodayISO, "CurrentWeekISO", each if [WeeksToTodayISO] = 0 then currentText else [WeekYearNameISO], type text),
				    add_WeekPeriodName = Table.AddColumn(add_CurrentWeekISO, "WeekPeriodName", each [WeekYearNameISO] & ": " & Date.ToText([WeekStartISO], [Format="dd/MM/yyyy"]) & "~" & Date.ToText([WeekEndISO], [Format="dd/MM/yyyy"]), type text),
				    add_WeekOfMonthNumber = Table.AddColumn(add_WeekPeriodName, "WeekOfMonthNumber", each Date.WeekOfMonth([Date], startOfWeek), Int64.Type),
				    
				    #"-----HALF-----" = "",
				    add_HalfNumber = Table.AddColumn(add_WeekOfMonthNumber, "HalfNumber", each if [MonthNumber] <= 6 then 1 else 2, Int64.Type),
				    add_HalfYearName = Table.AddColumn(add_HalfNumber, "HalfYearName", each halfPrefix & Text.From([HalfNumber]) & " " & Text.From([Year]), type text),
				    add_HalfYearNumber = Table.AddColumn(add_HalfYearName, "HalfYearNumber", each [Year] * 100 + [HalfNumber], Int64.Type),
				    add_HalfIndex = Table.AddColumn(add_HalfYearNumber, "HalfIndex", each (2*([Year] - Date.Year(startDate))) + [HalfNumber], Int64.Type),
				    add_HalfsToToday = Table.AddColumn(add_HalfIndex, "HalfsToToday", each [HalfIndex] - ( 2 * ( currentYear - startYear ) + ( if currentMonth <= 6 then 1 else 2 )), Int64.Type),
				    add_CurrentHalf = Table.AddColumn(add_HalfsToToday, "CurrentHalf", each if [HalfsToToday] = 0 then currentText else [HalfYearName], type text), 
				
				    #"-----BIMESTER-----" = "",
				    add_BimesterNumber = Table.AddColumn(add_CurrentHalf, "BimesterNumber", each Number.RoundUp([MonthNumber]/ 2), Int64.Type),
				    add_BimesterYearName = Table.AddColumn(add_BimesterNumber, "BimesterYearName", each bimesterPrefix & Text.From([BimesterNumber]) & " " & Text.From([Year]), type text),
				    add_BimesterYearNumber = Table.AddColumn(add_BimesterYearName, "BimesterYearNumber", each [Year] * 100 + [BimesterNumber], Int64.Type),
				    add_BimesterIndex = Table.AddColumn(add_BimesterYearNumber, "BimesterIndex", each (6*([Year] - Date.Year(startDate))) + [BimesterNumber], Int64.Type),
				    add_BimestersToToday = Table.AddColumn(add_BimesterIndex, "BimestersToToday", each ( 6 * ( [Year] - startYear ) + [BimesterNumber])  - (( 6 * ( currentYear - startYear ) ) + Number.RoundUp ( currentMonth / 2, 0 )), Int64.Type),
				    add_CurrentBimester = Table.AddColumn(add_BimestersToToday, "CurrentBimester", each if [BimestersToToday] = 0 then currentText else [BimesterYearName], type text),
				
				    #"-----FORTNIGHT-----" = "",
				    add_FortnightOfMonthNumber = Table.AddColumn(add_CurrentBimester, "FortnightOfMonthNumber", each if [DayOfMonth] <= 15 then 1 else 2, Int64.Type),
				    add_FortnightMonthNumber = Table.AddColumn(add_FortnightOfMonthNumber, "FortnightMonthNumber", each [MonthNumber] * 10 + [FortnightOfMonthNumber], Int64.Type),
				    add_FortnightMonthName = Table.AddColumn(add_FortnightMonthNumber, "FortnightMonthName", each [MonthNameShort] & " " & Text.From([FortnightOfMonthNumber]), type text),
				    add_FortnightMonthYearNumber = Table.AddColumn(add_FortnightMonthName, "FortnightMonthYearNumber", each [Year] * 10000 + [MonthNumber] * 100 + [FortnightMonthNumber], Int64.Type),
				    add_FortnightMonthYearName = Table.AddColumn(add_FortnightMonthYearNumber, "FortnightMonthYearName", each fortnightPrefix & Text.From([FortnightOfMonthNumber]) & " " & [MonthNameShort] & " " & Text.From([Year]), type text),
				    add_FortnightIndex = Table.AddColumn(add_FortnightMonthYearName, "FortnightIndex", each 24 * ([Year] - Date.Year(startDate)) + 2 * ([MonthNumber]-Date.Month(startDate)) + [FortnightOfMonthNumber] , Int64.Type),
				    add_FortnightsToToday = Table.AddColumn(add_FortnightIndex, "FortnightsToToday", each [FortnightIndex] - ( (24 * (currentYear - Date.Year(startDate))) + (2 * (Date.Month(currentDate)-Date.Month(startDate))) + (if Date.Day(currentDate) <= 15 then 1 else 2)), Int64.Type),
				    add_CurrentFortnight = Table.AddColumn(add_FortnightsToToday, "CurrentFortnight", each if [FortnightsToToday] = 0 then currentText else [FortnightMonthName], type text),
				    
				    #"-----CLOSING-----" = "",
				    add_ClosingDateRef = Table.AddColumn(add_CurrentFortnight, "ClosingDateRef", each if [DayOfMonth] <= closingMonthStartDay then [Date] else Date.AddMonths([Date], 1), type date),
				    add_ClosingYear = Table.AddColumn(add_ClosingDateRef, "ClosingYear", each Date.Year([ClosingDateRef]), Int64.Type),
				    add_ClosingMonthName = Table.AddColumn(add_ClosingYear, "ClosingMonthName", each Text.Proper(Date.MonthName([ClosingDateRef], language)), type text),
				    add_ClosingMonthNameShort = Table.AddColumn(add_ClosingMonthName, "ClosingMonthNameShort", each Text.Start([ClosingMonthName], 3), type text), 
				    add_ClosingMonthNumber = Table.AddColumn(add_ClosingMonthNameShort, "ClosingMonthNumber", each Date.Month([ClosingDateRef]), Int64.Type),
				    add_ClosingMonthYearName = Table.AddColumn(add_ClosingMonthNumber, "ClosingMonthYearName", each [ClosingMonthNameShort] & "/" & Text.End(Text.From([ClosingYear]), 2), type text), 
				    add_ClosingMonthYearNumber = Table.AddColumn(add_ClosingMonthYearName, "ClosingMonthYearNumber", each [ClosingYear] * 100 + [ClosingMonthNumber], Int64.Type),
				
				    #"-----SEASONS-----" = "",
				    add_SeasonNorthNumber = Table.AddColumn(
				        add_ClosingMonthYearNumber, 
				        "SeasonNorthNumber", 
				        each if [MonthDayNumber] >= 321 and [MonthDayNumber] <= 620  then 1 else 
				                if [MonthDayNumber] >= 621 and [MonthDayNumber] <= 921  then 2 else 
				                if [MonthDayNumber] >= 922 and [MonthDayNumber] <= 1221 then 3 else 4,
				        Int64.Type
				    ),
				
				    add_SeasonNorthName = Table.AddColumn(
				        add_SeasonNorthNumber, 
				        "SeasonNorthName", 
				        each if [SeasonNorthNumber] = 1 then springText else 
				                if [SeasonNorthNumber] = 2 then summerText else 
				                if [SeasonNorthNumber] = 3 then autumnText else winterText, 
				        type text
				    ),
				
				    add_SeasonSouthNumber = Table.AddColumn(
				        add_SeasonNorthName, 
				        "SeasonSouthNumber", 
				        each if [MonthDayNumber] >= 321 and [MonthDayNumber] <= 620  then 1 else 
				                if [MonthDayNumber] >= 621 and [MonthDayNumber] <= 921  then 2 else 
				                if [MonthDayNumber] >= 922 and [MonthDayNumber] <= 1221 then 3 else 4,
				        Int64.Type
				    ),
				
				    add_SeasonSouthName = Table.AddColumn(
				        add_SeasonSouthNumber, 
				        "SeasonSouthName", 
				        each if [SeasonNorthNumber] = 1 then autumnText else 
				                if [SeasonNorthNumber] = 2 then winterText else 
				                if [SeasonNorthNumber] = 3 then springText else summerText, 
				        type text
				    ),
				
				    #"-----BUSINESS-----" = "",
				    add_Holiday = Table.RenameColumns(Table.RemoveColumns(Table.Join(add_SeasonSouthName, "Date", Table.PrefixColumns(holidays, "h"), "h.Date", JoinKind.LeftOuter, JoinAlgorithm.LeftIndex), "h.Date"), {{"h.Holiday", "Holiday"}}),
				    add_BusinessDayNumber = Table.AddColumn(add_Holiday, "BusinessDayNumber", each if [Holiday] <> null or Date.DayOfWeek([Date], Day.Monday) > 4 then 0 else 1, Int64.Type),
				    add_BusinessDayName = Table.AddColumn(add_BusinessDayNumber, "BusinessDayName", each if [BusinessDayNumber] = 1 then businessDayText else nonBusinessDayText, type text),
				
				
				    #"-----FISCAL COLUMNS-----" = "", 
				    #"-----FISCAL YEAR-----" = "", 
				    add_FiscalYearStartNumber = Table.AddColumn(add_BusinessDayName, "FiscalYearStartNumber", each Date.Year(Date.AddMonths([Date], 12 - monthOfFiscalYearEnd)), Int64.Type),
				    add_FiscalYearEndNumber = Table.AddColumn(add_FiscalYearStartNumber, "FiscalYearEndNumber", each [FiscalYearStartNumber] + 1, Int64.Type),
				    add_FiscalYear = Table.AddColumn(add_FiscalYearEndNumber, "FiscalYear", each "FY " & Text.From([FiscalYearStartNumber]) & "-" &Text.From([FiscalYearEndNumber]), type text),
				    add_FiscalYearStart = Table.AddColumn( add_FiscalYear, "FiscalYearStart", each #date( [FiscalYearStartNumber], if monthOfFiscalYearEnd = 12 then 1 else  monthOfFiscalYearEnd + 1 , 1), type date ),
				    add_FiscalYearEnd = Table.AddColumn( add_FiscalYearStart, "FiscalYearEnd", each Date.EndOfMonth(#date([FiscalYearEndNumber], monthOfFiscalYearEnd, 1)), type date),
				    add_CurrentFiscalYear = Table.AddColumn(add_FiscalYearEnd, "CurrentFiscalYear", each if [FiscalYearStartNumber] = currentFiscalYear then currentText else [FiscalYear], type text),
				    add_FiscalYearsToToday = Table.AddColumn(add_CurrentFiscalYear, "FiscalYearsToToday", each [FiscalYearStartNumber] - currentFiscalYear, Int64.Type),
				    
				    #"-----FISCAL MONTH-----" = "", 
				    add_FiscalMonthNumber = Table.AddColumn(add_FiscalYearsToToday, "FiscalMonthNumber", each Date.Month( Date.AddMonths([Date], - monthOfFiscalYearEnd ) ), Int64.Type),
				    add_FiscalMonthName = Table.AddColumn( add_FiscalMonthNumber, "FiscalMonthName", each Text.Proper(Date.ToText([Date], [Format="MMMM", Culture = language])), type text ),
				    add_FiscalMonthNameShort = Table.AddColumn(add_FiscalMonthName, "FiscalMonthNameShort", each Text.Start([FiscalMonthName], 3), type text),
				    add_CurrentFiscalMonth = Table.AddColumn( add_FiscalMonthNameShort, "CurrentFiscalMonth", each if Date.IsInCurrentMonth([Date]) then currentText else [FiscalMonthName], Text.Type),
				    add_FiscalYearMonthName = Table.AddColumn(add_CurrentFiscalMonth, "FiscalYearMonthName", each [FiscalMonthNameShort] & " " & [FiscalYear], type text),
				    add_FiscalYearMonthNumber = Table.AddColumn( add_FiscalYearMonthName, "FiscalYearMonthNumber", each [FiscalYearStartNumber] * 100 + [FiscalMonthNumber], Int64.Type ),
				    add_FiscalYearMonthCurrent = Table.AddColumn( add_FiscalYearMonthNumber, "FiscalYearMonthCurrent", each if [CurrentFiscalYear] = currentText and [CurrentFiscalMonth] = currentText then currentText else [FiscalYearMonthName], type text),
				    add_FiscalMonthsToToday = Table.AddColumn(add_FiscalYearMonthCurrent, "FiscalMonthsToToday", each [ CurrentFiscalMonth = Date.Month( Date.AddMonths( currentDate, - monthOfFiscalYearEnd ) ), FiscalQuartersToToday = (([FiscalYearStartNumber] - currentFiscalYear) * 12) + ([FiscalMonthNumber] - CurrentFiscalMonth)][FiscalQuartersToToday], Int64.Type ),
				    
				    #"-----FISCAL QUARTER-----" = "", 
				    add_FiscalQuarterNumber = Table.AddColumn(add_FiscalMonthsToToday, "FiscalQuarterNumber", each Number.RoundUp( [FiscalMonthNumber] / 3), Int64.Type),
				    add_FiscalQuarterName = Table.AddColumn(add_FiscalQuarterNumber, "FiscalQuarterName", each "FQ " & Text.From([FiscalQuarterNumber]), Text.Type),
				    add_FiscalMonthOfQuarterNumber = Table.AddColumn(add_FiscalQuarterName, "FiscalMonthOfQuarterNumber", each [FiscalMonthNumber] - 3 * ([FiscalQuarterNumber] - 1) , Int64.Type ),
				    add_FiscalYearQuarterName = Table.AddColumn(add_FiscalMonthOfQuarterNumber, "FiscalYearQuarterName", each [FiscalQuarterName] & " | " & [FiscalYear], type text),
				    add_FiscalYearQuarterNumber = Table.AddColumn(add_FiscalYearQuarterName, "FiscalYearQuarterNumber", each [FiscalYearStartNumber] * 100 + [FiscalQuarterNumber], Int64.Type),
				    add_FiscalQuarterStart = Table.AddColumn(add_FiscalYearQuarterNumber, "FiscalQuarterStart", each Date.StartOfMonth( Date.AddMonths( [Date] , 1-[FiscalMonthOfQuarterNumber] )), Date.Type),
				    add_FiscalQuarterEnd = Table.AddColumn(add_FiscalQuarterStart, "FiscalQuarterEnd", each Date.EndOfMonth( Date.AddMonths( [Date] , 3-[FiscalMonthOfQuarterNumber] )), Date.Type),
				    add_FiscalQuartersToToday = Table.AddColumn(
				        add_FiscalQuarterEnd, 
				        "FiscalQuartersToToday", 
				        each [
				            CurrentFiscalMonth = Date.Month(Date.AddMonths(currentDate, - monthOfFiscalYearEnd)),  
				            CurrentFiscalQuarter = Number.RoundUp(CurrentFiscalMonth / 3),
				            FiscalQuartersToToday = (([FiscalYearStartNumber] - currentFiscalYear) * 4) + ([FiscalQuarterNumber] - CurrentFiscalQuarter)
				        ][FiscalQuartersToToday], 
				        Int64.Type 
				    ),
				    add_CurrentFiscalQuarter = Table.AddColumn(add_FiscalQuartersToToday, "CurrentFiscalQuarter", each if [FiscalQuartersToToday] = 0 then currentText else [FiscalYearQuarterName], type text),
				    add_DayOfFiscalQuarter = Table.AddColumn(add_CurrentFiscalQuarter, "DayOfFiscalQuarter", each Number.From( [Date] - [FiscalQuarterStart] ) + 1, Int64.Type ),
				
				    #"-----RENAME COLUMNS----" = "",
				    columnNamesDictionary = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("jVjbbtw4DP2XPPcnMpkGCdAm7U6KYlHkQXGUxrseC7A9xWa/fnUjeURx0n2ZkY54aIo6omz9+HGxd5u/+JD+XPy79sOru3j8UPDb+dn/Uwdjexw8mdReMXxbH8JDeHZvyXR06xe3uJvwl6/dG7dusf+Wra9Oy+LnDZ56uZ3cRH4vh9xLln96t0T4cg71l8DD5patYLfzOIyhaZPVx/m54NfjkRozj9LMMq9OTNpktffr4CM0/7xzx2qy98OS4c3fBQGzYQWfFtPF6fjkl97J6eiXAPAwAkxuIMPRDjOculaGJX2U4NSU9MZlu3/5HObttSzTPnz2a236KbXZqrrKRmU5ihEtSjb67v3fPMU07g7+6GbH88ucTy3askuOkRsYEabkt2EeXkNWhaJfRuNfo3vuI8h+riLJCCNqaRvdtPb+ssrcuNruyuhUk5ezyzmJKeVcSFvsyuzTSIAWzZVtaJ7VEOfHDJkV02BGlQkzYaIRf1p8iS0uuYRXOk2E2RpmnExg0tJlRsw7EmJSkSDdhsDxpPHQdpp4qFbEUa4V0mazUiziQCkWuTHLMFWLzKzVQtpsBps0jnrcpblvbVO19nmvQoaH2qdJaRaogalKEuhDhIGOuiXWUVDhgEC+nmJivaz1wzIe/botUs80gqzyMLEIRh/sIUC2ESUqSEXYKLIx7QJt1Vn5pCC2Yh1pBEhFT2xQVAXdGY1JXeCvaqwiHoRWOSA1pqHeBLREV500c6+HhAByVLSsehpg1npyc9Rkkd2/aMmkHRt63STYT5Z6UnUup1HxcXu4j/al/uaTqdg2cD6lBOfzP9ukEx8b9BD7EeYDOu/MT0VXGQYLSmUXuFlvaFXUZSNEinpDg6i3tjujcdZb6y/JC5GRESKR4NCKBdeAJDhiV/XkJ+PkkzwaYCCEnvnFL2N4rhu/GBWIdr7GaOsXobTHL8kEj2HWSHse37jpBXmtPhVABKhRZCElqkUoTKbpZ2F16jGiUt0gCy4bCiB7qBlkgSWDMatiJD4GUzc892Wz70rJkknt9Abf9TubSJDEXVfnd2aZb6j6mZjIHkM6JXOna7ACkAMJ3Rk1ePdeCSYfGFhN6q6vwNfx3J7Hn6+bVvXX0zj/67WuEzp4Q9nsx/Zi+XjXQVkqpAdGBkZoqVpys2DgAtcM/LTLZrjqYhHlKDdGRLT8ROflJyosP5Ng/YmH609Uc/3ZCZBJAETEI3gKa/yGTJ/Nf/i0E9OX897nb+ZjdBcKmvt7fzX6+JAEAVc+CIVV+sUcbdVbqRDkpbCQ8NVUUeHVtOWr91N0BO+n6A3eGMAVvDBUH6IPpHevt9Z0OA1nZmR82NihiCOJ5uDdGua7ODmZy8eoicGFBEppNEDNLxNpDIMF0SQK9xBO/bMPp0k/WSDNbZ6bzEIP8MEWprHsi+t4NvPH93Usa+OvWndPMbV+XfHzL5p820aJKfY/uaewuKepOSyAylcGmcjXBUKDvT6ug5v4AgmvY8pQ/fjFCxlroPUV37x6T/GFy/KDcOsFrUr7pbSNwLvI+liNINs4jiqspjKZUcElUgXgdGKGuqbKA6O+rSrm6lgsYL/dM4z7q0E0UypWsQpdv1WDWayYqgoV+ug+pMEfWlPaBLDSpi8BKMdNeTozBeGr6tRlToOGjzoZZQ+TOL/85g1ILwCBbQWcvVdQ87Hx3o+6NWjy2qOGOn733drnGb9e30l4G2FMrB2kOdBLQAdp0KAe/c/sdXcfquoQnmqIWXzOXYdIFerAuaeblx29tNSY1lezUY0bkFbrGlYX59pLvhtXnAu6J9f44+N/", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#"en-US" = _t, #"pt-BR" = _t, #"es-ES" = _t]),
				    
				    fromToColumnNames = if language <> "en-US" then List.Zip(Table.ToColumns(Table.SelectColumns(columnNamesDictionary, {"en-US", language}))) else null,
				    renamedColumns = if language <> "en-US" then Table.RenameColumns(add_DayOfFiscalQuarter, fromToColumnNames) else add_DayOfFiscalQuarter,
				    #"Sorted Rows" = Table.Sort(renamedColumns,{{"Data", Order.Ascending}})
				in
				    #"Sorted Rows"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

